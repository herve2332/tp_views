CREATE OR REPLACE FUNCTION GET_NB_WORKERS(FACTORY_ID NUMBER) RETURN NUMBER IS
  nb_workers NUMBER;
BEGIN
  SELECT COUNT(*)
  INTO nb_workers
  FROM workers
  WHERE factory_id = FACTORY_ID AND end_date IS NULL;
  RETURN nb_workers;
END GET_NB_WORKERS;

CREATE OR REPLACE FUNCTION GET_NB_BIG_ROBOTS RETURN NUMBER IS
  nb_big_robots NUMBER;
BEGIN
  SELECT COUNT(*)
  INTO nb_big_robots
  FROM robots
  WHERE num_pieces > 3;
  RETURN nb_big_robots;
END GET_NB_BIG_ROBOTS;

CREATE OR REPLACE FUNCTION GET_BEST_SUPPLIER RETURN VARCHAR2 IS
  best_supplier VARCHAR2(100);
BEGIN
  SELECT supplier_name
  INTO best_supplier
  FROM (SELECT supplier_name FROM BEST_SUPPLIERS ORDER BY total_quantity DESC)
  WHERE ROWNUM = 1;
  RETURN best_supplier;
END GET_BEST_SUPPLIER;

CREATE OR REPLACE FUNCTION GET_OLDEST_WORKER RETURN NUMBER IS
  oldest_worker_id NUMBER;
BEGIN
  SELECT worker_id
  INTO oldest_worker_id
  FROM workers
  ORDER BY start_date ASC
  WHERE ROWNUM = 1;
  RETURN oldest_worker_id;
END GET_OLDEST_WORKER;

CREATE OR REPLACE PROCEDURE SEED_DATA_WORKERS(NB_WORKERS NUMBER, FACTORY_ID NUMBER) IS
BEGIN
  FOR i IN 1..NB_WORKERS LOOP
    INSERT INTO workers (worker_id, lastname, firstname, age, start_date, factory_id)
    VALUES (
      workers_seq.NEXTVAL,
      'worker_l_' || workers_seq.CURRVAL,
      'worker_f_' || workers_seq.CURRVAL,
      TRUNC(DBMS_RANDOM.VALUE(18, 65)),
      (SELECT TO_DATE(TRUNC(DBMS_RANDOM.VALUE(TO_CHAR(DATE '2065-01-01','J'), TO_CHAR(DATE '2070-01-01','J'))), 'J') FROM DUAL),
      FACTORY_ID
    );
  END LOOP;
END SEED_DATA_WORKERS;


CREATE OR REPLACE PROCEDURE ADD_NEW_ROBOT(MODEL_NAME VARCHAR2(50)) IS
BEGIN
  INSERT INTO robots (robot_id, model_name)
  VALUES (robots_seq.NEXTVAL, MODEL_NAME);
END ADD_NEW_ROBOT;

CREATE OR REPLACE PROCEDURE SEED_DATA_SPARE_PARTS(NB_SPARE_PARTS NUMBER) IS
BEGIN
  FOR i IN 1..NB_SPARE_PARTS LOOP
    INSERT INTO spare_parts (part_id, part_name)
    VALUES (spare_parts_seq.NEXTVAL, 'part_' || spare_parts_seq.CURRVAL);
  END LOOP;
END SEED_DATA_SPARE_PARTS;


